name: Deploy static content to Pages

on:
  # 기본 main 브랜치에 대한 푸시 이벤트 발생 시 실행
  push:
    branches: ['main']

  # Actions 탭에서 수동으로 워크플로우를 실행할 수 있도록 구성
  workflow_dispatch:

# GITHUB_TOKEN의 권한을 설정하여 GitHub Pages에 배포할 수 있도록 함
permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: 'pages'
  cancel-in-progress: true # 1개의 배포 작업 하던 중 새로운 커밋이 들어오면 이전 걸 취소하고 새로운 커밋으로 배포 진행

jobs:
  # 단순히 배포만 수행하기에 하나의 잡으로만 구성
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'
          cache-dependency-path: ./IWant100_FE/package-lock.json

      # node_modules랑 package-lock.json 삭제
      - name: Remove node_modules and package-lock.json
        run: |
          rm -rf node_modules package-lock.json
      
      # npm install로 종속성 다시 설치
      - name: Install dependencies
        run: npm ci
        working-directory: ./IWant100_FE

      - name: Build
        run: npm run build
        working-directory: ./IWant100_FE

      - name: List build directory
        run: ls -la ./IWant100_FE/dist

      - name: Setup Pages
        uses: actions/configure-pages@v4

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v2
        with:
          path: ./IWant100_FE/dist
          name: github-pages

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
        with:
          artifact_name: github-pages